{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jessm\\\\gt\\\\sandbox2\\\\prototype_3\\\\client\\\\src\\\\components\\\\Recorder\\\\Recorder.js\";\nimport React, { Component } from \"react\";\nconst record = document.querySelector(\".record\");\nconst stop = document.querySelector(\".stop\");\nconst soundClips = document.querySelector(\".sound-clips\");\nconst canvas = document.querySelector(\".visualizer\");\nconst mainSection = document.querySelector(\".main-controls\"); // disable stop button while not recording\n// stop.disabled = true;\n// visualiser setup - create web audio api context and canvas\n\nlet audioCtx;\nconst canvasCtx = canvas.getContext(\"2d\"); //main block for doing the audio recording\n\nif (navigator.mediaDevices.getUserMedia) {\n  console.log(\"getUserMedia supported.\");\n  const constraints = {\n    audio: true\n  };\n  let chunks = [];\n\n  let onSuccess = function onSuccess(stream) {\n    const mediaRecorder = new MediaRecorder(stream);\n    visualize(stream);\n\n    record.onclick = function () {\n      mediaRecorder.start();\n      console.log(mediaRecorder.state);\n      console.log(\"recorder started\");\n      record.style.background = \"red\";\n      stop.disabled = false;\n      record.disabled = true;\n    };\n\n    stop.onclick = function () {\n      mediaRecorder.stop();\n      console.log(mediaRecorder.state);\n      console.log(\"recorder stopped\");\n      record.style.background = \"\";\n      record.style.color = \"\"; // mediaRecorder.requestData();\n\n      stop.disabled = true;\n      record.disabled = false;\n    };\n\n    mediaRecorder.onstop = function (e) {\n      console.log(\"data available after MediaRecorder.stop() called.\");\n      const clipName = prompt(\"Enter a name for your sound clip?\", \"My unnamed clip\");\n      const clipContainer = document.createElement(\"article\");\n      const clipLabel = document.createElement(\"p\");\n      const audio = document.createElement(\"audio\");\n      const deleteButton = document.createElement(\"button\");\n      clipContainer.classList.add(\"clip\");\n      audio.setAttribute(\"controls\", \"\");\n      deleteButton.textContent = \"Delete\";\n      deleteButton.className = \"delete\";\n\n      if (clipName === null) {\n        clipLabel.textContent = \"My unnamed clip\";\n      } else {\n        clipLabel.textContent = clipName;\n      }\n\n      clipContainer.appendChild(audio);\n      clipContainer.appendChild(clipLabel);\n      clipContainer.appendChild(deleteButton);\n      soundClips.appendChild(clipContainer);\n      audio.controls = true;\n      const blob = new Blob(chunks, {\n        type: \"audio/ogg; codecs=opus\"\n      });\n      chunks = [];\n      const audioURL = window.URL.createObjectURL(blob);\n      audio.src = audioURL;\n      console.log(\"recorder stopped\");\n\n      deleteButton.onclick = function (e) {\n        let evtTgt = e.target;\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\n      };\n\n      clipLabel.onclick = function () {\n        const existingName = clipLabel.textContent;\n        const newClipName = prompt(\"Enter a new name for your sound clip?\");\n\n        if (newClipName === null) {\n          clipLabel.textContent = existingName;\n        } else {\n          clipLabel.textContent = newClipName;\n        }\n      };\n    };\n\n    mediaRecorder.ondataavailable = function (e) {\n      chunks.push(e.data);\n    };\n  };\n\n  let onError = function onError(err) {\n    console.log(\"The following error occured: \" + err);\n  };\n\n  navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n} else {\n  console.log(\"getUserMedia not supported on your browser!\");\n}\n\nfunction visualize(stream) {\n  if (!audioCtx) {\n    audioCtx = new AudioContext();\n  }\n\n  const source = audioCtx.createMediaStreamSource(stream);\n  const analyser = audioCtx.createAnalyser();\n  analyser.fftSize = 2048;\n  const bufferLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(bufferLength);\n  source.connect(analyser); //analyser.connect(audioCtx.destination);\n\n  draw();\n\n  function draw() {\n    var WIDTH = canvas.width;\n    var HEIGHT = canvas.height;\n    requestAnimationFrame(draw);\n    analyser.getByteTimeDomainData(dataArray);\n    canvasCtx.fillStyle = \"rgb(200, 200, 200)\";\n    canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\n    canvasCtx.lineWidth = 2;\n    canvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\n    canvasCtx.beginPath();\n    let sliceWidth = WIDTH * 1.0 / bufferLength;\n    let x = 0;\n\n    for (let i = 0; i < bufferLength; i++) {\n      let v = dataArray[i] / 128.0;\n      let y = v * HEIGHT / 2;\n\n      if (i === 0) {\n        canvasCtx.moveTo(x, y);\n      } else {\n        canvasCtx.lineTo(x, y);\n      }\n\n      x += sliceWidth;\n    }\n\n    canvasCtx.lineTo(canvas.width, canvas.height / 2);\n    canvasCtx.stroke();\n  }\n}\n\nwindow.onresize = function () {\n  canvas.width = mainSection.offsetWidth;\n};\n\nwindow.onresize();\n\nclass Recorder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      class: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \"Web dictaphone\")), /*#__PURE__*/React.createElement(\"section\", {\n      class: \"main-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      class: \"visualizer\",\n      height: \"60px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      class: \"record\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 15\n      }\n    }, \"Record\"), /*#__PURE__*/React.createElement(\"button\", {\n      class: \"stop\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 15\n      }\n    }, \"Stop\"))), /*#__PURE__*/React.createElement(\"section\", {\n      class: \"sound-clips\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, \"\\u2754\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      id: \"toggle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Recorder;","map":{"version":3,"sources":["C:/Users/Jessm/gt/sandbox2/prototype_3/client/src/components/Recorder/Recorder.js"],"names":["React","Component","record","document","querySelector","stop","soundClips","canvas","mainSection","audioCtx","canvasCtx","getContext","navigator","mediaDevices","getUserMedia","console","log","constraints","audio","chunks","onSuccess","stream","mediaRecorder","MediaRecorder","visualize","onclick","start","state","style","background","disabled","color","onstop","e","clipName","prompt","clipContainer","createElement","clipLabel","deleteButton","classList","add","setAttribute","textContent","className","appendChild","controls","blob","Blob","type","audioURL","window","URL","createObjectURL","src","evtTgt","target","parentNode","removeChild","existingName","newClipName","ondataavailable","push","data","onError","err","then","AudioContext","source","createMediaStreamSource","analyser","createAnalyser","fftSize","bufferLength","frequencyBinCount","dataArray","Uint8Array","connect","draw","WIDTH","width","HEIGHT","height","requestAnimationFrame","getByteTimeDomainData","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","sliceWidth","x","i","v","y","moveTo","lineTo","stroke","onresize","offsetWidth","Recorder","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nconst record = document.querySelector(\".record\");\r\nconst stop = document.querySelector(\".stop\");\r\nconst soundClips = document.querySelector(\".sound-clips\");\r\nconst canvas = document.querySelector(\".visualizer\");\r\nconst mainSection = document.querySelector(\".main-controls\");\r\n\r\n// disable stop button while not recording\r\n\r\n// stop.disabled = true;\r\n\r\n// visualiser setup - create web audio api context and canvas\r\n\r\nlet audioCtx;\r\nconst canvasCtx = canvas.getContext(\"2d\");\r\n\r\n//main block for doing the audio recording\r\n\r\nif (navigator.mediaDevices.getUserMedia) {\r\n  console.log(\"getUserMedia supported.\");\r\n\r\n  const constraints = { audio: true };\r\n  let chunks = [];\r\n\r\n  let onSuccess = function (stream) {\r\n    const mediaRecorder = new MediaRecorder(stream);\r\n\r\n    visualize(stream);\r\n\r\n    record.onclick = function () {\r\n      mediaRecorder.start();\r\n      console.log(mediaRecorder.state);\r\n      console.log(\"recorder started\");\r\n      record.style.background = \"red\";\r\n\r\n      stop.disabled = false;\r\n      record.disabled = true;\r\n    };\r\n\r\n    stop.onclick = function () {\r\n      mediaRecorder.stop();\r\n      console.log(mediaRecorder.state);\r\n      console.log(\"recorder stopped\");\r\n      record.style.background = \"\";\r\n      record.style.color = \"\";\r\n      // mediaRecorder.requestData();\r\n\r\n      stop.disabled = true;\r\n      record.disabled = false;\r\n    };\r\n\r\n    mediaRecorder.onstop = function (e) {\r\n      console.log(\"data available after MediaRecorder.stop() called.\");\r\n\r\n      const clipName = prompt(\r\n        \"Enter a name for your sound clip?\",\r\n        \"My unnamed clip\"\r\n      );\r\n\r\n      const clipContainer = document.createElement(\"article\");\r\n      const clipLabel = document.createElement(\"p\");\r\n      const audio = document.createElement(\"audio\");\r\n      const deleteButton = document.createElement(\"button\");\r\n\r\n      clipContainer.classList.add(\"clip\");\r\n      audio.setAttribute(\"controls\", \"\");\r\n      deleteButton.textContent = \"Delete\";\r\n      deleteButton.className = \"delete\";\r\n\r\n      if (clipName === null) {\r\n        clipLabel.textContent = \"My unnamed clip\";\r\n      } else {\r\n        clipLabel.textContent = clipName;\r\n      }\r\n\r\n      clipContainer.appendChild(audio);\r\n      clipContainer.appendChild(clipLabel);\r\n      clipContainer.appendChild(deleteButton);\r\n      soundClips.appendChild(clipContainer);\r\n\r\n      audio.controls = true;\r\n      const blob = new Blob(chunks, { type: \"audio/ogg; codecs=opus\" });\r\n      chunks = [];\r\n      const audioURL = window.URL.createObjectURL(blob);\r\n      audio.src = audioURL;\r\n      console.log(\"recorder stopped\");\r\n\r\n      deleteButton.onclick = function (e) {\r\n        let evtTgt = e.target;\r\n        evtTgt.parentNode.parentNode.removeChild(evtTgt.parentNode);\r\n      };\r\n\r\n      clipLabel.onclick = function () {\r\n        const existingName = clipLabel.textContent;\r\n        const newClipName = prompt(\"Enter a new name for your sound clip?\");\r\n        if (newClipName === null) {\r\n          clipLabel.textContent = existingName;\r\n        } else {\r\n          clipLabel.textContent = newClipName;\r\n        }\r\n      };\r\n    };\r\n\r\n    mediaRecorder.ondataavailable = function (e) {\r\n      chunks.push(e.data);\r\n    };\r\n  };\r\n\r\n  let onError = function (err) {\r\n    console.log(\"The following error occured: \" + err);\r\n  };\r\n\r\n  navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\r\n} else {\r\n  console.log(\"getUserMedia not supported on your browser!\");\r\n}\r\n\r\nfunction visualize(stream) {\r\n  if (!audioCtx) {\r\n    audioCtx = new AudioContext();\r\n  }\r\n\r\n  const source = audioCtx.createMediaStreamSource(stream);\r\n\r\n  const analyser = audioCtx.createAnalyser();\r\n  analyser.fftSize = 2048;\r\n  const bufferLength = analyser.frequencyBinCount;\r\n  const dataArray = new Uint8Array(bufferLength);\r\n\r\n  source.connect(analyser);\r\n  //analyser.connect(audioCtx.destination);\r\n\r\n  draw();\r\n\r\n  function draw() {\r\n    var WIDTH = canvas.width;\r\n    var HEIGHT = canvas.height;\r\n\r\n    requestAnimationFrame(draw);\r\n\r\n    analyser.getByteTimeDomainData(dataArray);\r\n\r\n    canvasCtx.fillStyle = \"rgb(200, 200, 200)\";\r\n    canvasCtx.fillRect(0, 0, WIDTH, HEIGHT);\r\n\r\n    canvasCtx.lineWidth = 2;\r\n    canvasCtx.strokeStyle = \"rgb(0, 0, 0)\";\r\n\r\n    canvasCtx.beginPath();\r\n\r\n    let sliceWidth = (WIDTH * 1.0) / bufferLength;\r\n    let x = 0;\r\n\r\n    for (let i = 0; i < bufferLength; i++) {\r\n      let v = dataArray[i] / 128.0;\r\n      let y = (v * HEIGHT) / 2;\r\n\r\n      if (i === 0) {\r\n        canvasCtx.moveTo(x, y);\r\n      } else {\r\n        canvasCtx.lineTo(x, y);\r\n      }\r\n\r\n      x += sliceWidth;\r\n    }\r\n\r\n    canvasCtx.lineTo(canvas.width, canvas.height / 2);\r\n    canvasCtx.stroke();\r\n  }\r\n}\r\n\r\nwindow.onresize = function () {\r\n  canvas.width = mainSection.offsetWidth;\r\n};\r\n\r\nwindow.onresize();\r\n\r\nclass Recorder extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div class=\"wrapper\">\r\n          <header>\r\n            <h1>Web dictaphone</h1>\r\n          </header>\r\n\r\n          <section class=\"main-controls\">\r\n            <canvas class=\"visualizer\" height=\"60px\"></canvas>\r\n            <div id=\"buttons\">\r\n              <button class=\"record\">Record</button>\r\n              <button class=\"stop\">Stop</button>\r\n            </div>\r\n          </section>\r\n\r\n          <section class=\"sound-clips\"></section>\r\n        </div>\r\n\r\n        <label for=\"toggle\">❔</label>\r\n        <input type=\"checkbox\" id=\"toggle\"></input>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recorder;\r\n"]},"metadata":{},"sourceType":"module"}