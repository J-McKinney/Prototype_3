{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jessm\\\\gt\\\\sandbox2\\\\prototype_3\\\\client\\\\src\\\\components\\\\Recorder\\\\Recorder.js\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\"; // import Col from \"react-bootstrap/Col\";\n// import Container from \"react-bootstrap/Container\";\n// import Row from \"react-bootstrap/Row\";\n\nimport \"./Recorder.css\"; // const mediaRecorder = new MediaRecorder(stream);\n// if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n//   console.log(\"It's Working!\");\n//   navigator.mediaDevices\n//     .getUserMedia({ audio: true })\n//     // Success callback\n//     .then(function (stream) {\n//       var mediaRecorder = new MediaRecorder(stream);\n//       var myStream = mediaRecorder.stream;\n//       console.log(myStream);\n//     })\n//     // Error callback\n//     .catch(function (err) {\n//       console.log(\"The following getUserMedia error occured: \" + err);\n//     });\n// } else {\n//   console.log(\"getUserMedia not supported on your browser!\");\n// }\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      // mediaRecorder.start();\n      console.log(\"recorder started\");\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log(\"It's Working!\");\n        navigator.mediaDevices.getUserMedia({\n          audio: true\n        }) // Success callback\n        .then(function (stream) {\n          var mediaRecorder = new MediaRecorder(stream);\n          var myStream = mediaRecorder.stream;\n          console.log(myStream);\n        }) // Error callback\n        .catch(function (err) {\n          console.log(\"The following getUserMedia error occured: \" + err);\n        });\n      } else {\n        console.log(\"getUserMedia not supported on your browser!\");\n      }\n    };\n\n    this.stopRecording = () => {\n      console.log(\"recorder started\");\n\n      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n        console.log(\"It's Working!\");\n        navigator.mediaDevices.getUserMedia({\n          audio: false\n        }) // Success callback\n        .then(function (stream) {\n          var mediaRecorder = new MediaRecorder(stream);\n          var myStream = mediaRecorder.stream;\n          console.log(myStream);\n        }) // Error callback\n        .catch(function (err) {\n          console.log(\"The following getUserMedia error occured: \" + err);\n        });\n      } else {\n        console.log(\"getUserMedia not supported on your browser!\");\n      }\n    };\n\n    this.state = {\n      recording: true\n    };\n    this.startRecording = this.startRecording.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.startRecording,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, \"Record\")));\n  }\n\n}\n\nexport default Recorder;","map":{"version":3,"sources":["C:/Users/Jessm/gt/sandbox2/prototype_3/client/src/components/Recorder/Recorder.js"],"names":["React","Component","Button","Recorder","constructor","props","startRecording","console","log","navigator","mediaDevices","getUserMedia","audio","then","stream","mediaRecorder","MediaRecorder","myStream","catch","err","stopRecording","state","recording","bind","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;AACA;AACA;;AACA,OAAO,gBAAP,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SASnBC,cATmB,GASF,MAAM;AACrB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,UAAIC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AAC/DJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,QAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADhB,EAEE;AAFF,SAGGC,IAHH,CAGQ,UAAUC,MAAV,EAAkB;AAEtB,cAAIC,aAAa,GAAG,IAAIC,aAAJ,CAAkBF,MAAlB,CAApB;AACA,cAAIG,QAAQ,GAAGF,aAAa,CAACD,MAA7B;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AAED,SATH,EAUE;AAVF,SAWGC,KAXH,CAWS,UAAUC,GAAV,EAAe;AACpBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CW,GAA3D;AACD,SAbH;AAcD,OAhBH,MAgBS;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACD;AACJ,KA/BkB;;AAAA,SAiCnBY,aAjCmB,GAiCH,MAAM;AACpBb,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;;AACA,UAAIC,SAAS,CAACC,YAAV,IAA0BD,SAAS,CAACC,YAAV,CAAuBC,YAArD,EAAmE;AAC/DJ,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAC,QAAAA,SAAS,CAACC,YAAV,CACGC,YADH,CACgB;AAAEC,UAAAA,KAAK,EAAE;AAAT,SADhB,EAEE;AAFF,SAGGC,IAHH,CAGQ,UAAUC,MAAV,EAAkB;AAEtB,cAAIC,aAAa,GAAG,IAAIC,aAAJ,CAAkBF,MAAlB,CAApB;AACA,cAAIG,QAAQ,GAAGF,aAAa,CAACD,MAA7B;AACAP,UAAAA,OAAO,CAACC,GAAR,CAAYS,QAAZ;AAED,SATH,EAUE;AAVF,SAWGC,KAXH,CAWS,UAAUC,GAAV,EAAe;AACpBZ,UAAAA,OAAO,CAACC,GAAR,CAAY,+CAA+CW,GAA3D;AACD,SAbH;AAcD,OAhBH,MAgBS;AACLZ,QAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AACD;AACJ,KAtDkB;;AAEjB,SAAKa,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE;AADF,KAAb;AAIA,SAAKhB,cAAL,GAAsB,KAAKA,cAAL,CAAoBiB,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAiDDC,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKlB,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CADF,CADF;AAOD;;AAjE8B;;AAoEjC,eAAeH,QAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\n// import Col from \"react-bootstrap/Col\";\r\n// import Container from \"react-bootstrap/Container\";\r\n// import Row from \"react-bootstrap/Row\";\r\nimport \"./Recorder.css\";\r\n\r\n// const mediaRecorder = new MediaRecorder(stream);\r\n\r\n// if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n//   console.log(\"It's Working!\");\r\n//   navigator.mediaDevices\r\n//     .getUserMedia({ audio: true })\r\n//     // Success callback\r\n//     .then(function (stream) {\r\n\r\n//       var mediaRecorder = new MediaRecorder(stream);\r\n//       var myStream = mediaRecorder.stream;\r\n//       console.log(myStream);\r\n\r\n//     })\r\n//     // Error callback\r\n//     .catch(function (err) {\r\n//       console.log(\"The following getUserMedia error occured: \" + err);\r\n//     });\r\n// } else {\r\n//   console.log(\"getUserMedia not supported on your browser!\");\r\n// }\r\n\r\nclass Recorder extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        recording: true\r\n    };\r\n\r\n    this.startRecording = this.startRecording.bind(this);\r\n  }\r\n\r\n  startRecording = () => {\r\n    // mediaRecorder.start();\r\n    console.log(\"recorder started\");\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        console.log(\"It's Working!\");\r\n        navigator.mediaDevices\r\n          .getUserMedia({ audio: true })\r\n          // Success callback\r\n          .then(function (stream) {\r\n      \r\n            var mediaRecorder = new MediaRecorder(stream);\r\n            var myStream = mediaRecorder.stream;\r\n            console.log(myStream);\r\n      \r\n          })\r\n          // Error callback\r\n          .catch(function (err) {\r\n            console.log(\"The following getUserMedia error occured: \" + err);\r\n          });\r\n      } else {\r\n        console.log(\"getUserMedia not supported on your browser!\");\r\n      }\r\n  };\r\n\r\n  stopRecording = () => {\r\n    console.log(\"recorder started\");\r\n    if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\r\n        console.log(\"It's Working!\");\r\n        navigator.mediaDevices\r\n          .getUserMedia({ audio: false })\r\n          // Success callback\r\n          .then(function (stream) {\r\n      \r\n            var mediaRecorder = new MediaRecorder(stream);\r\n            var myStream = mediaRecorder.stream;\r\n            console.log(myStream);\r\n      \r\n          })\r\n          // Error callback\r\n          .catch(function (err) {\r\n            console.log(\"The following getUserMedia error occured: \" + err);\r\n          });\r\n      } else {\r\n        console.log(\"getUserMedia not supported on your browser!\");\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"wrapper\">\r\n          <Button onClick={this.startRecording}>Record</Button>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Recorder;\r\n"]},"metadata":{},"sourceType":"module"}